# for 반복문 사용해서 인자값들 하나하나 불러와
# result 값들의 위치값을 추가하기 위해 extractor 설정
cnt = 1
for (i in flag) {
# i 변수에 대입되는 데이터의 타입 == (TRUE | FALSE) == bool
print(i)
if(i){
# i가 TRUE라면 result에 cnt번째의 위치에 t 데이터 대입
result[cnt] = t
}else{
# i가 FALSE라면 result에 cnt번째의 위치에 f 데이터 대입
result[cnt] = f
}
cnt = cnt + 1
}
return(result)
}
iftest <- function(flag, t, f){
# 해당하는 함수를 호출했을 때 결과 값의 타입 == 벡터
result <- c()
# flag 매개변수는 인자값의 데이터의 타입 == 벡터
# for 반복문 사용해서 인자값들 하나하나 불러와
# result 값들의 위치값을 추가하기 위해 extractor 설정
cnt = 1
for (i in flag) {
# i 변수에 대입되는 데이터의 타입 == (TRUE | FALSE) == bool
print(i)
if(i){
# i가 TRUE라면 result에 cnt번째의 위치에 t 데이터 대입
### 이거 근데 왜 i = TRUE가 아니라 i라고만 썼을까 ???
result[cnt] = t
}else{
# i가 FALSE라면 result에 cnt번째의 위치에 f 데이터 대입
result[cnt] = f
}
cnt = cnt + 1
}
return(result)
}
iftest(df$ratio < 'ratio', large, small)
iftest(df_m$ratio < 'ratio', large, small)
iftest(df_m$ratio < 'ratio', 'large', 'small')
iftest(df_m$ratio >= mean(df_m$ratio), 'large', 'small')
# i 변수에 대입되는 데이터의 타입 == (TRUE | FALSE) == bool
print(i)
iftest(c(TRUE, TRUE, FALSE, TRUE), 'large', 'small')
mpg <- ggplot2::mpg
ggplot(data = mpg)
library(ggplot2)
mpg <- ggplot2::mpg
ggplot(data = mpg)
save.image("~/R/3주차_실습_변수.RData")
ggplot(data = mpg, aes(x = displ, y = hwy))
ggplot(data = mpg, aes(x = displ, y = hwy) + \ # \ 는 윗줄과 아랫줄 연결한다는 뜻
geom_point())
ggplot(data = mpg, aes(x = displ, y = hwy) + # \ 는 윗줄과 아랫줄 연결한다는 뜻
geom_point())
ggplot(data = mpg, aes(x = displ, y = hwy) + # \ 는 윗줄과 아랫줄 연결한다는 뜻
geom_point())
ggplot(data = mpg, aes(x = displ, y = hwy) + # \ 는 윗줄과 아랫줄 연결한다는 뜻
)geom_point())
ggplot(data = mpg, aes(x = displ, y = hwy) + # \ 는 윗줄과 아랫줄 연결한다는 뜻
)geom_point())
ggplot(data = mpg, aes(x = displ, y = hwy) +
)geom_point())
ggplot(data = mpg, aes(x = displ, y = hwy)
) + geom_point())
ggplot(data = mpg, aes(x = displ, y = hwy)
) + geom_point()
ggplot(data = mpg, aes(x = drv)
) + geom_bar()
mpg %>%
group_by(drv) %>%
summarise(mean_hwy = mean(hwy)) -> group_data
ggplot(
data = group_data,
aes(x = dry, y = mean_hwy)
) + geom_col()
ggplot(
data = group_data,
aes(x = drv, y = mean_hwy)
) + geom_col()
ggplot(
data = mpg,
aes(x = drv, y = hwy)
) + geom_boxplot()
group_data2 <- mpg %>%
group_by(year) %>%
summarise(count = n())
group_data2
ggplot(
data = group_data2,
aes(x = year, y = count)
) + geom_line()
save.image("~/R/3주차_실습_변수.RData")
welfare <- read.spss("./csv/Koweps.sav", to data.frame = T)
library(dplyr)
welfare <- read.spss("./csv/Koweps.sav", to data.frame = T)
library(ggplot2)
## sav 확장자 파일을 로드
## 외부의 ~~ 다운로드
library(psych)
welfare %>%
rename(
gender = h10_g3,
birth = h10_g4,
code_job = h10_eco9,
)
library(dplyr)
library(psych)
install.packages('foreign')
library(foreign)
NA == NA
install.packages('psych')
library(psych)
welfare <- read.spss("./csv/Koweps.sav", to data.frame = T)
welfare <- read.spss('./csv/Koweps.sav', to data.frame = T)
welfare <- read.spss('./csv/Koweps.sav', to.data.frame = T)
View(welfare)
library(ggplot2)
welfare %>%
rename(
gender = h10_g3,
birth = h10_g4,
code_job = h10_eco9,
income = p1002_8aq1,
loc = h10_reg7
) -> welfare
df <- welfare %>%
select(
gender, birth, loc, code_job, income
)
is.na(df)
table(is.na(df))
table(is.na(df$gender))
table(is.na(df$dirth))
table(is.na(df$birth))
table(is.na(df$income))
table(is.na(df$loc))
table(is.na(df$code_job))
save.image("~/R/4주차_실습_변수.RData")
table(df$gender)
ifelse(
df$gender == 1,
'male', 'female'
)
ifelse(
df$gender == 1,
'male', 'female'
) -> df$gender
head(df$gender)
table(df$gender)
male_flag <- df$gender == 'male'
df[male_flag, ]
df[male_flag, income]
df[male_flag, 'income']
df[male_flag, 'income'] -> male_income
mean(male_income)
mean(male_income, na.rm = T)
female_flag <- df$gender == 'female'
df[female_flag, 'income'] -> female_income
mean(female_income, na.rm = T)
mean(
df[!male_flag, 'income'], na.rm = T
)
df %>%
group_by(gender) %>%
summarise(income_mean = mean(income), na.rm = T)
df %>%
group_by(gender) %>%
summarise(income_mean = mean(income), na.rm = T)
df %>%
group_by(gender) %>%
summarise(income_mean = mean(income, na.rm = T))
df %>%
filter(!is.na()
)
df %>%
filter(income, !is.na()
)
df$income %>%
filter(!is.na()
)
df %>%
filter(!is.na(income)
)
df %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(income_mean = mean(income))
df$income == 0
table(df$income == 0)
table(df$income == 9999)
table(df$income == 0) | table(df$income == 9999)
table(df$income == 0| 9999)
table(df$income == 0 | 9999)
table(df$income == 0 | df$income == 9999)
# 다른 방법
table(df$income %in% c(0, 9999))
ifelse(df$income == 0 | df$income == 9999, NA, df$income)
ifelse(
df$income == 0 | df$income == 9999,
NA,
df$income
)
df %>%
income %in% c(0, 9999)
df[income %in% c(0, 9999)]
df['income' %in% c(0, 9999)]
df[df$income %in% c(0, 9999)]
df[df$income %in% c(0, 9999), 'income']
df[df$income %in% c(0, 9999), 'income'] = NA
table(df$income %in% c(0, 9999))
df %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(income_mean = mean(income))
df %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(income_mean = mean(income)) -> gender_income_mean
ggplot(data = gender_income_mean, aes(x = gender, y = income_mean))
ggplot(data = gender_income_mean, aes(x = gender, y = income_mean)) + geom_col()
+ geom_col()
ggplot(data = gender_income_mean, aes(x = gender, y = income_mean)
) + geom_col()
age <- 2015 - df$birth
table(age)
table(birth)
table(df$birth)
View(df$birth)
age <- (2015 - df$birth)
df$birth
df %>%
mutate(df, age = 2015 - birth)
df %>%
mutate(df, age = 2015 - birth) %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(income_mean = mean(income))
df %>%
mutate(df, age = 2015 - birth) %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(income_mean = mean(income)) -> age_income_mean
ggplot(data = age_income_mean, aes(x = age, y = income_mean)
) + geom_col()
print(head(age_income_mean), 1)
print(head(age_income_mean), 1)
print(arrange(income_mean))
print(arrange(age_income_mean))
print(arrange(age_income_mean, income_mean))
print(arrange(age_income_mean, desc(income_mean)))
print(head(age_income_mean, 1))
print(head(arrange(age_income_mean, desc(income_mean))), 1)
print(head(arrange(age_income_mean, desc(income_mean)), 1))
print(
head(
arrange(
age_income_mean,
desc(income_mean)
), 1
)
)
df %>%
mutate(age = 2015 - birth) %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(income_mean = mean(income)) -> age_income
ggplot(data = age_income, aes(x = age, y = income_mean))
ggplot(data = age_income, aes(x = age, y = income_mean)
) + geom_col()
ggplot(data = age_income_mean, aes(x = age, y = income_mean) # 나이와 평균 임금의 상관관계를 보기 위해  age_income_mean 데이터와 age, income_mean을 축으로 하는 바탕 생성
) + geom_col() # 막대 그래프 생성성
source("~/R/4주차_실습.R", echo=TRUE)
age_income %>%
arrange(desc(income_mean)) %>%
head(1)
'old', 'middle'))
df %>%
mutate(age = 2015 - birth, ageg = ifelse(age < 40,
'young',
ifelse(age > 60,
'old', 'middle')))
df %>%
mutate(age = 2015 - birth, ageg = ifelse(age < 40,
'young',
ifelse(age > 60,
'old', 'middle'))) %>%
group_by(ageg) %>%
summarise(income_mean = mean(income, na.rm = T)) -> ageg_income_mean
ggplot(ageg_income_mean, aes(x = ageg, y = income_mean)
) + geom_col()
## 이 때 'young', 'middle', 'old' 순서로 보고 싶으니까
## 그래프의 x축의 순서를 커스텀
ggplot(ageg_income_mean, aes(x = ageg, y = income_mean)
) + geom_col() + scale_x_discrete(
limits = c('young', 'middle', 'old')
)
df$loc
source("~/R/4주차_실습.R", echo=TRUE)
install.packages("psych")
df %>%
filter(!is.na(income)) %>%
group_by(loc) %>%
summarise(income_mean = mean(income)) -> loc_income_mean
library(psych)
library(foreign)
library(dplyr)
library(ggplot2)
df %>%
filter(!is.na(income)) %>%
group_by(loc) %>%
summarise(income_mean = mean(income)) -> loc_income_mean
ggplot(lock_income
aes(x = loc, y = income_mean)
ggplot(loc_income
aes(x = loc, y = income_mean)
ggplot(loc_income,
aes(x = loc, y = income_mean)
)+ geom_col()
ggplot(data = loc_income,
aes(x = loc, y = income_mean)
)+ geom_col()
ggplot(loc_income_mean,
aes(x = loc, y = income_mean)
)+ geom_col()
df %>%
mutate(age = 2015 - birth, ageg = ifelse(age < 40,
'young',
ifelse(age > 60,
'old', 'middle'))) %>%
group_by(ageg, gender) %>%
summarise(income_mean = mean(income, na.rm = T))
df %>%
mutate(age = 2015 - birth, ageg = ifelse(age < 40,
'young',
ifelse(age > 60,
'old', 'middle'))) %>%
group_by(ageg, gender) %>%
summarise(income_mean = mean(income, na.rm = T)) -> ageg_gender_income_mean
View(ageg_gender_income_mean)
ggplot(
data = ageg_gender_income_mean,
aes(x = ageg, y = income_mean)
) + geom_col()
ggplot(
data = ageg_gender_income_mean,
aes(x = c(ageg, gender), y = income_mean)
) + geom_col()
ggplot(
data = ageg_gender_income_mean,
aes(x = ageg, y = income_mean, z = gender)
) + geom_col()
ggplot(
data = ageg_gender_income_mean,
aes(x = ageg, y = income_mean, fill = gender)
) + geom_col()
ggplot(
data = ageg_gender_income_mean,
aes(x = ageg, y = income_mean, fill = gender) # ggplot으로 2D 그래프를 그릴 수 있으니까 gender를 기준으로 다르게 fill 해주겠다
) + geom_col(position = 'dodge')
) + scale_x_discrete(
ggplot(
data = ageg_gender_income_mean,
aes(x = ageg, y = income_mean, fill = gender) # ggplot으로 2D 그래프를 그릴 수 있으니까 gender를 기준으로 다르게 fill 해주겠다
) + geom_col(position = 'dodge' # position 값을 바꿔 막대를 여러개 그리게 해 주겠다
) + scale_x_discrete(
limits = c('young', 'middle', 'old')
)
install.packages('readxl')
library(readxl)
read_excel('./csv/Koweps_codebook.xlsx') -> code_book
View(code_book)
read_excel('./csv/Koweps_codebook.xlsx', sheet = 2) -> code_book
View(code_book)
View(df)
View(code_book)
View(df)
total.df <- left_join(df, code_book, by = 'code_job')
View(total.df)
total.df %>%
filter(!is.na(code_job))
source("~/R/4주차_실습.R", echo=TRUE)
total.df %>%
filter(!is.na(code_job)) %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(income_mean = mean(income))
total.df %>%
filter(!is.na(code_job)) %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(income_mean = mean(income)) -> job_income_mean
total.df %>%
filter(!is.na(code_job)) %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(income_mean = mean(income)) %>%
head(income_mean, 10)
total.df %>%
filter(!is.na(code_job)) %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(income_mean = mean(income)) %>%
head(income_mean, 10)
total.df %>%
filter(!is.na(code_job)) %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(income_mean = mean(income))
total.df %>%
filter(!is.na(code_job)) %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(income_mean = mean(income)) %>%
head(10)
total.df %>%
filter(!is.na(code_job)) %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(income_mean = mean(income)) %>%
head(10) -> job_income_mean
)
ggplot(data = job_income_mean,
aes(x = job, y = income_mean
) + geom_col(position = 'dodge'
)
)
ggplot(data = job_income_mean,
aes(x = job, y = income_mean
) + geom_col(position = 'dodge'
)
)
rlang::last_trace()
View(job_income_mean)
source("~/R/4주차_실습.R", echo=TRUE)
total.df %>%
filter(!is.na(code_job)) %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(income_mean = mean(income)) %>%
arrange(desc(income_mean)) %>%
head(10)
total.df %>%
filter(!is.na(code_job)) %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(income_mean = mean(income)) %>%
arrange(desc(income_mean)) %>%
head(10) -> job_income_mean
View(job_income_mean)
ggplot(data = job_income_mean,
aes(x = job, y = income_mean
) + geom_col(position = 'dodge'
)
)
View(job_income_mean)
ggplot(data = job_income_mean,
aes(x = job, y = income_mean
)) + geom_col(position = 'dodge'
)
ggplot(data = job_income_mean,
aes(x = job, y = income_mean
)) + geom_col(
) _ coord_flip()
ggplot(data = job_income_mean,
aes(x = job, y = income_mean
)) + geom_col(
) _ coord_flip()
ggplot(data = job_income_mean,
aes(x = job, y = income_mean
)) + geom_col(
) + coord_flip()
ggplot(data = job_income_mean,
aes(x = reorder(job), y = income_mean
)) + geom_col(
) + coord_flip() # 가로에 글씨가 오면 너무 지저분해서 위치 바꿔줌
ggplot(data = job_income_mean,
aes(x = reorder(job, income_mean), y = income_mean # x 축 job을 income_mean의 순서로 재배치
)) + geom_col(
) + coord_flip() # 가로에 글씨가 오면 너무 지저분해서 위치 바꿔줌
ggplot(data = job_income_mean,
aes(x = income_mean, y = job)
) + geom_col()
ggplot(data = job_income_mean,
aes(x = income_mean, y = reorder(job, income_mean))
) + geom_col()
df %>%
mutate(age = 2015 - birth) %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(income_mean = mean(income)) -> age_gender_income_mean_2
ggplot(
data = age_gender_income_mean_2,
aes(x = age, y = income_mean, color = gender)
) + geom_line()
ggplot(
data = age_gender_income_mean_2,
aes(x = age, y = income_mean, fill = gender)
) + geom_line()
ggplot(
data = age_gender_income_mean_2,
aes(x = age, y = income_mean, color = gender)
) + geom_line()
install.packages('plotly')
library(plotly)
ggplot(
data = age_gender_income_mean_2,
aes(x = age, y = income_mean, color = gender)
) + geom_line() -> a_line
ggplotly(a_line)
